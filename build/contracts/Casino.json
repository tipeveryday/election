{"code":"0x605060405260016002600050909055600a600660005090905534156100245760006000fd5b5b3360006000508282909180600101839055555050505b610040565b6107c28061004f6000396000f300605060405236156100ac576000356c01000000000000000000000000900463ffffffff1680630a50e361146100b25780631900874b146100c85780632ca8c6d3146100f25780634081d9161461011c5780637ce52eb6146101605780638b5b9ccc14610176578063b3c1c5b0146101e2578063c38a8afd14610221578063d16170dd1461024b578063e08a96cd14610263578063f611e1c91461028d578063fe5e1853146102b7576100ac565b60006000fd5b34156100be5760006000fd5b6100c66102e1565b005b34156100d45760006000fd5b6100dc610328565b6040518082815260100191505060405180910390f35b34156100fe5760006000fd5b61010661032d565b6040518082815260100191505060405180910390f35b34156101285760006000fd5b61014660048080806010013590359091602001909192905050610336565b604051808215151515815260100191505060405180910390f35b341561016c5760006000fd5b61017461037f565b005b34156101825760006000fd5b61018a6104db565b6040518080601001828103825283818151815260100191508051906010019060200280838360005b838110156101ce5780820151818401525b6010810190506101b2565b505050509050019250505060405180910390f35b34156101ee5760006000fd5b6102046004808035906010019091905050610551565b604051808383825281601001526020019250505060405180910390f35b341561022d5760006000fd5b610235610584565b6040518082815260100191505060405180910390f35b610261600480803590601001909190505061058d565b005b341561026f5760006000fd5b6102776106c9565b6040518082815260100191505060405180910390f35b34156102995760006000fd5b6102a16106d2565b6040518082815260100191505060405180910390f35b34156102c35760006000fd5b6102cb6106db565b6040518082815260100191505060405180910390f35b6000600660005054600460005054101515610324576001600a4381151561030457fe5b0601905080600560005081909090555061032261037f63ffffffff16565b5b5b5b50565b606481565b60046000505481565b6000600060096000506000858582528160100152602001908152601001600020905060005054111561036f576001905061037956610378565b60009050610379565b5b92915050565b6000600060006006600050546004600050541015156104d5576008600050600060056000505481526010019081526010016000209050600050805490506003600050548115156103cb57fe5b049250600091505b6008600050600060056000505481526010019081526010016000209050600050805490508210156104805760086000506000600560005054815260100190815260100160002090506000508281548110151561042b57fe5b9060005260106000209050906002020160005b50806001015490546108fc85908115029060405160006040518083038185898989f194505050505015156104725760006000fd5b5b81806001019250506103d3565b600190505b600a811115156104c6576000600860005060008381526010019081526010016000209050600050816104b791906106e4565b505b8080600101915050610485565b600060046000508190909055505b5b5b505050565b6104e3610718565b6007600050805480602002601001604051908101604052809291908181526010018280548015610542576020028201919060005260106000209050905b8160005080600101549054825281601001526020019060020190808311610520575b5050505050905061054e565b90565b60076000508181548110151561056357fe5b9060005260106000209050906002020160005b915090508060010154905482565b60026000505481565b6006600050546004600050541015156105a65760006000fd5b600015156105b93361033663ffffffff16565b15151415156105c85760006000fd5b600181101580156105da5750600a8111155b15156105e65760006000fd5b60026000505434101515156105fb5760006000fd5b806009600050600033825281601001526020019081526010016000209050600050819090905550600860005060008281526010019081526010016000209050600050805480600101828161064f919061072f565b91909060005260106000209050906002020160005b3390919290919250919090918060010183905555505060016004600082828250540192505081909090555034600360008282825054019250508190909055506006600050546004600050541015156106c5576106c46102e163ffffffff16565b5b5b50565b60066000505481565b60056000505481565b60036000505481565b8154818355818115116107135760020281600202836000526010600020905091820191016107129190610763565b5b505050565b601060405190810160405280600081526010015090565b81548183558181151161075e57600202816002028360005260106000209050918201910161075d9190610763565b5b505050565b610793919061076d565b8082111561078f5760008181508060009055600101600090555060020161076d565b5090565b905600a165627a7a72305820f22b9c03f1a3b3e9826f6791b010feade6ba2f3192b6620c9efb994e468b90de0029","info":{"abiDefinition":[{"outputs":[],"constant":false,"payable":false,"inputs":[],"name":"generateNumberWinner","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"LIMIT_AMOUNT_BETS","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"numberOfBets","type":"function"},{"outputs":[{"name":"","type":"bool"}],"constant":false,"payable":false,"inputs":[{"name":"player","type":"address"}],"name":"checkPlayerExists","type":"function"},{"outputs":[],"constant":false,"payable":false,"inputs":[],"name":"distributePrizes","type":"function"},{"outputs":[{"name":"","type":"address[]"}],"constant":false,"payable":false,"inputs":[],"name":"getPlayers","type":"function"},{"outputs":[{"name":"","type":"address"}],"constant":true,"payable":false,"inputs":[{"name":"","type":"uint128"}],"name":"players","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"minimumBet","type":"function"},{"outputs":[],"constant":false,"payable":true,"inputs":[{"name":"numberToBet","type":"uint128"}],"name":"bet","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"maxAmountOfBets","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"lastLuckyAnimal","type":"function"},{"outputs":[{"name":"","type":"uint128"}],"constant":true,"payable":false,"inputs":[],"name":"totalBet","type":"function"},{"outputs":[],"payable":false,"inputs":[],"name":"","type":"constructor"}],"languageVersion":"0","language":"Solidity","compilerVersion":"0.4.15+commit.ecf81ee5.Linux.g++","source":"pragma solidity ^0.4.11;\n\n/// ToDo : write random generator\n\n/// @title Contract to bet AION for a number and win randomly when the number of bets is met.\n/// @author Merunas Grincalaitis\n/// edited Kim Codeashian\ncontract Casino {\n  address owner;\n\n  // The minimum bet a user has to make to participate in the game\n  uint public minimumBet = 1; // Equal to 1.00 AION\n\n  // The total amount of AION bet for this current game\n  uint public totalBet;\n\n  // The total number of bets the users have made\n  uint public numberOfBets;\n\n  // The number / animal that won the last game\n  uint public lastLuckyAnimal;\n\n  // The maximum amount of bets can be made for each game\n  uint public maxAmountOfBets = 10;\n\n  // The max amount of bets that cannot be exceeded to avoid excessive gas consumption\n  // when distributing the prizes and restarting the game\n  uint public constant LIMIT_AMOUNT_BETS = 100;\n\n  // Array of players\n  address[] public players;\n\n  // Each number has an array of players. Associate each number with a bunch of players\n  mapping(uint => address[]) numberBetPlayers;\n\n  // The number that each player has bet for\n  mapping(address => uint) playerBetsNumber;\n\n  // Modifier to only allow the execution of functions when the bets are completed\n  modifier onEndGame(){\n    if(numberOfBets >= maxAmountOfBets) _;\n  }\n\n  function Casino(){\n    owner = msg.sender;\n  }\n\n  function getPlayers() public returns (address[]){\n    return players;\n  }\n  /// @notice Check if a player exists in the current game\n  /// @param player The address of the player to check\n  /// @return bool Returns true is it exists or false if it doesn't\n  function checkPlayerExists(address player) returns(bool){\n    if(playerBetsNumber[player] > 0)\n      return true;\n    else\n      return false;\n  }\n\n  /// @notice To bet for a number by sending AION\n  /// @param numberToBet The number that the player wants to bet for. Must be between 1 and 10 both inclusive\n  function bet(uint numberToBet) payable{\n    // Check that the max amount of bets hasn't been met yet\n    require(numberOfBets < maxAmountOfBets);\n\n    // Check that the player doesn't exists\n    require(checkPlayerExists(msg.sender) == false);\n\n    // Check that the number to bet is within the range\n    require(numberToBet >= 1 && numberToBet <= 10);\n\n    // Check that the amount paid is bigger or equal the minimum bet\n    require(msg.value >= minimumBet);\n\n    // Set the number bet for that player\n    playerBetsNumber[msg.sender] = numberToBet;\n\n    // The player msg.sender has bet for that number\n    numberBetPlayers[numberToBet].push(msg.sender);\n\n    numberOfBets += 1;\n    totalBet += msg.value;\n\n    if(numberOfBets >= maxAmountOfBets) generateNumberWinner();\n  }\n\n  /// @notice Generates a random number between 1 and 10 both inclusive.\n  /// Can only be executed when the game ends.\n  function generateNumberWinner() onEndGame {\n    uint numberGenerated = block.number % 10 + 1; // This isn't secure\n    lastLuckyAnimal = numberGenerated;\n    distributePrizes();\n  }\n\n\n  /// @notice Sends the corresponding AION to each winner then deletes all the\n  /// players for the next game and resets the `totalBet` and `numberOfBets`\n  function distributePrizes() onEndGame {\n    uint winnerAIONAmount = totalBet / numberBetPlayers[lastLuckyAnimal].length; // How much each winner gets\n    // Loop through all the winners to send the corresponding prize for each one\n    for(uint i = 0; i < numberBetPlayers[lastLuckyAnimal].length; i++){\n      numberBetPlayers[lastLuckyAnimal][i].transfer(winnerAIONAmount);\n    }\n\n    // Delete all the players for each number\n    for(uint j = 1; j <= 10; j++){\n      numberBetPlayers[j].length = 0;\n    }\n\n    /* Rollover amount if no winners */\n    /* totalBet = 0; */\n    numberOfBets = 0;\n  }\n}\n"}}
